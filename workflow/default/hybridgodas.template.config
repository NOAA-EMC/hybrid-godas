#!/bin/bash
set -eu
#================================================================================
# Main configuration script for MOM6 Hybrid-GODAS run system
#================================================================================

#--------------------------------------------------------------------------------
# Job submission
#
# EXP_NAME    : an (ideally) unique experiment name that is prepended to the 
#               jobnames that are submitted
# SCHED_ACCT  : the job scheduler account to run under
# SCHED_QUEUE : The queue to use for the multi-node jobs. 
#               TODO: Currently the single process jobs are hardcoded to use
#                 "ldtn" on Gaea
#--------------------------------------------------------------------------------
export EXP_NAME="${EXP_NAME}"
export SCHED_ACCT="cpo_hyb_go"
export SCHED_QUEUE="batch"



#--------------------------------------------------------------------------------
# Timing
#
# CYCLE_START   : The date of the first ANALYSIS to generate. This is only needed
#                 for the very first cycle, afterward this value is ignored and
#                 the cycle time is determined by rocoto. Format is (YYYYMMDDHH)
# CYCLE_END     : The date of the last ANALYSIS to generate. (YYYYMMDDHH)
# CYCLE_LEN     : The period of a single cycle. (hours)
# CYCLE_LEAPADJ : if =1 then the cycle is extended by 1 day whenever a leap day
#                 is encountered. For example, a 5 day cycle producing "pentad"
#                 averages should be run for 6 days if a leap day is encountered
#                 so that the analysis days are the same for each year.
#--------------------------------------------------------------------------------
export CYCLE_START=2004010100
export CYCLE_END=2005123100
export CYCLE_LEN=120
export CYCLE_LEAPADJ=1



#--------------------------------------------------------------------------------
# Fixed directories. 
#
# These should be filled out automatically, the only one worth changing might be
#  the WORK_DIR variable
#
# ROOT_DIR     : path to the root hybrid-godas directory containing all the 
#                necessary scripts and executables to run the system
# EXP_DIR      : path to the root directory for the current experiment, where
#                all the experiment configuration and DA output files are stored
# WORK_DIR     : A temporary directory used during the steps of a cycle. Once all
#                the steps of a given cycle are complete, the output in WORK_DIR
#                is removed automatically
#--------------------------------------------------------------------------------
export ROOT_DIR="${ROOT_DIR}"
export EXP_DIR="${EXP_DIR}"
export WORK_DIR="${ROOT_DIR}/WRK/${EXP_NAME}"



#--------------------------------------------------------------------------------
# Data cycle / timeslots
#
# ENS_SIZE      : number of ensemble members
# DA_MODE       : data assimilation mode: 
#                 "none" = No DA (still does observation operator)
#                 "ekf"  = LETKF only
#                 "var"  = 3DVar only
#                 "hyb"  = hybrid (LETKF followed by 3DVar)
# DA_HYB_ALPHA  : amount of weight to give the variational da when doing hybrid.
#                 has no effect otherwise.
# DA_SLOT_LEN   : length (hours) of each observation operator slot.
#                 (Currently only 24 hours is supported)
# DA_WNDW_OFST  : length (hours) between start of forecast and start of DA window.
#                 For an analysis time at the end of the window, this should be 0.
#                 For analysis time in center of DA window, this should be CYCLE_LEN/2.
#                 NOTE: currently only multiples of 24 hours supported.
# DA_TS_ONLY    : if 1, only T/S fields are updated by the LETKF, otherwise
#                 T/S/U/V will be updated. 3DVar ONLY updates T/S no matter what.
#--------------------------------------------------------------------------------
export ENS_SIZE=1
export DA_MODE="none"
export DA_HYB_ALPHA=0.5
export DA_SLOT_LEN=24
export DA_WNDW_OFST=48
export DA_TS_ONLY=0



#--------------------------------------------------------------------------------
# Observation files
#
# NOTE: the paths listed below provide a template to locate the files fore a 
#  given date. Use the %Y, %m, %d placeholders to subsitute the desired year,
#  month, day, into the path name.
#
# OBS_ERR_ON_MISS  : if =1, the scripts throw an error if the observation file
#                    for a single date is not found. Otherwise just a warning is
#                    given. Useful to leave at 0 for now if, for example, there
#                    are some days missing SST data.
# OBS_USE_SST      : if =1, use the SST data pointed to by OBS_SST
# OBS_SST          : a path to the preprocessed SST observation files
# OBS_USE_PROF     : if =1, use the T/S insitu profiles pointed to by OBS_PROF_T
#                    and OBS_PROF_S
# OBS_PROF       : a path to the insitu temperature/salinity profile observations
#--------------------------------------------------------------------------------
export OBS_ERR_ON_MISS=0
export OBS_USE_PROF=1
export OBS_USE_SST=1
export OBS_USE_ADT=1
export OBS_PROF=${D}ROOT_DIR/DATA/obs/profile_wod18/%Y/%Y%m%d.nc
export OBS_SST=${D}ROOT_DIR/DATA/obs/sst_acspo_avhrr/%Y/%Y%m/%Y%m%d.nc
export OBS_ADT=${D}ROOT_DIR/DATA/obs/rads_adt/%Y/%Y%m%d/


#--------------------------------------------------------------------------------
# Surface forcing files.
#
# The forcing files are generated from a set of preprocessed files combining
#  a high resolution mean forcing, perturbations from a lower resolution ensemble
#  and a climatological correction. The ensemble perturbations are obviously only
#  used when doing an ensemble run.
#
# NOTE: the paths listed below provide a template to locate the files fore a 
#  given date. Use the %Y, %m, %d placeholders to subsitute the desired year,
#  month, day, into the path name.
#
# NOTE: you can also use the '#var#' and '#mem2#' place holders to fill in for
#  the forcing variable, and 2 digit ensemble number.
#
# Mean forcing
# ------------------------------
#  FORC_VAR        : a list of all variables that are to be prepared for a given
#                    forecast run
#  FORC_MEAN_FILE  : a path to the mean forcing files containing the variables
#                    given in FORC_VAR
#  FORC_VAR_POS    : a list of the variables that are to be kept positive. During
#                    the generation of the ensemble files, perturbations added 
#                    might result in negative values, which is bad for some fields.
#  FORC_RUNOFF_CLIM : river runoff monthly climatology file
#
#
# Ensemble perturbations
# ------------------------------
#  FORC_ENS_FILE   : a path to the ensemble forcing files from which
#                    perturbations are obtained to addto the FORC_MEAN_FILE files
#  FORC_VAR_ENS    : a list of the variables that are to have ensemble
#                    perturbations added to them. If a variable is in FORC_VAR
#                    but not in FORC_VAR_ENS, each ensemble member will have an
#                    identical copy of the field from FORC_MEAN_FILE
#  FORC_RUNOFF_PERTURB : if not =1, random ensemble perturbations with be
#                    generated based on the variance in the FORC_RUNOFF_VAR file
#  FORC_RUNOFF_VAR : climatological variance of the river runoff
#
#
# Climatological bias correction
# ------------------------------
#  FORC_CORR       : if =1, a monthly climatology bias correction will be added
#                    to the fields specified by FORC_CORR_ADD and FORC_CORR_MUL
#  FORC_CORR_DIR   : the path to the bias correction climatologies
#  FORC_CORR_ADD   : A comma separated list of variables which have an additive
#                    correction applied from the bias correction files
#  FORC_CORR_MUL   : A comma separated list of variables which have a
#                    multiplicative correction applied from the bias correction
#                    files
#--------------------------------------------------------------------------------
export FORC_MEAN_FILE=$ROOT_DIR/DATA/fluxes/cfsr.6hr/%Y/%Y%m%d/cfsr.%Y%m%d.'#var#'.nc
export FORC_VAR=PRATE,SLP,TMP.2m,SPFH.2m,UGRD.10m,VGRD.10m,DLWRF.sfc,DSWRF.sfc
export FORC_VAR_POS=PRATE,SPFH.2m,DLWRF.sfc,DSWRF.sfc

export FORC_ENS_FILE=$ROOT_DIR/DATA/fluxes/20CRv2c.6hr/%Y/%Y%m%d/'#mem2#'/20cr.%Y%m%d.'#var#'.nc
export FORC_VAR_ENS=PRATE,TMP.2m,SPFH.2m,UGRD.10m,VGRD.10m,DLWRF.sfc,DSWRF.sfc

export FORC_CORR=1
export FORC_CORR_DIR=$ROOT_DIR/DATA/fluxes/bias.cfsr_dfs52
export FORC_CORR_ADD=UGRD.10m,VGRD.10m
export FORC_CORR_MUL=PRATE,DLWRF.sfc,DSWRF.sfc

export FORC_RUNOFF_PERTURB=1
export FORC_RUNOFF_CLIM=${D}ROOT_DIR/DATA/fluxes/runoff/runoff.daitren.v20180328.clim.nc
export FORC_RUNOFF_VAR=${D}ROOT_DIR/DATA/fluxes/runoff/runoff.daitren.v20180328.var.nc


#--------------------------------------------------------------------------------
# MOM6 File I/O formats
#
# NOTE: this whole section will likely be removed once the workflow is cleaned
#  up some more.
#
# FCST_IO_PROC  : number of processors that the MOM6 I/O is done on.
# FCST_IO_MISS  : due to the MOM6 masking, some I/O procs will not save any 
#                 output files if entirely on land.
#                 TODO: I think this can already be safely removed?
#--------------------------------------------------------------------------------
export FCST_IO_PROC=36
export FCST_IO_MISS="0024"



#--------------------------------------------------------------------------------
# Output files
# 
# Specifies which files are saved by the final cycle.post job step, and if any 
#  compression or remapping is performed. Some of these options will not be 
#  actually enabled if the data assimilation method doesn't produce that data.
#  E.g. DA_MODE="var" will cause SAVE_BKG_SPRD to have no effect.
# All output is placed in EXP_DIR/output
#
# SAVE_FORMAT_GRID   : {native, 1, 05, 025} anything other than "native" will 
#                      remap the output to the indicated regular lat/lon grid
#                      resolution.
#                      NOTE: only "native" is supported right now until the scripts
#                      can be finalized.
# SAVE_COMP_LEVEL    : The level of compression to use (0-9). 4 seems to be a good
#                      level. 9 is too slow.
# SAVE_{BKG,ANA}_ENS : Save the individual ensemble background and analysis
#                      members.
#                      NOTE: not yet implemented.
# SAVE_BKG_SLOT      : Save the individual per ensemble member output for all 
#                      timeslots
#                      NOTE: not yet implemented.
# SAVE_{BKG,ANA}_MEAN: Save the background or analysis ensemble mean
# SAVE_{BKG,ANA}_SPRD: Save the background or analysis ensemble spread
# SAVE_ANA_MEAN_LETKF: If running with DA_MODE="hyb", this saves the intermediate
#                      ensemble analysis mean generated by the LETKF step. The
#                      subsequent 3dvar step then adjusts this analysis mean,
#                      saving the final mean via SAVE_ANA_MEAN
# SAVE_OMF           : save the observation minus forecast (O-F) statistics
# SAVE_RST_MINCYCLES : if > 0, the full ensemble restart files for this many of 
#                      the previous cycles are saved so that the experiment can
#                      be rewound several cycles when something goes wrong. 
#                      Restart files from any older cycles are deleted, except
#                      for the first cycle of each year if SAVE_RST_ANUAL=1, or if
#                      the dates match a pattern given by SAVE_RST_REGEX
# SAVE_RST_REGEX     : save the restart files if the date (YYYYMMDDHH) matches the 
#                      provided egrep formated regular expression
# SAVE_RST_ANNUAL    : If =1, the restart files (for the whole ensemble) are saved
#                      at the beginning of each year
#--------------------------------------------------------------------------------
export SAVE_FORMAT_GRID="native"
export SAVE_COMP_LEVEL=4

export SAVE_BKG_ENS=0
export SAVE_BKG_SLOT=0
export SAVE_BKG_MEAN=1
export SAVE_BKG_SPRD=1

export SAVE_ANA_ENS=0
export SAVE_ANA_MEAN=1
export SAVE_ANA_MEAN_LETKF=1
export SAVE_ANA_SPRD=1

export SAVE_OMF=1

export SAVE_RST_MINCYCLES=3
export SAVE_RST_REGEX="^....(0101|0401|0705|1003)00"
export SAVE_RST_ANNUAL=0
